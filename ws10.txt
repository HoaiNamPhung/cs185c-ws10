	I'm not able to ssh from the remote server to my local Windows machine, and I also wasn't able to use pscp to send the file 'numbers.py' from my local Windows machine to the remote server due to a seeming lack of permissions on the server, so I decided to just put 'numbers.py' on github and then clone it.

	Running the python script using command 'time python3 numbers.py' returned as follows:

min 0 max 15835 avg 9.33467921636312

real    0m26.178s
user    0m10.623s
sys     0m1.154s

	I then created a script, 'numbers.sh', with the following contents:

#!/bin/bash
data=$(tail -n+2 "amazon_reviews_us_Books_v1_02.tsv" |  cut -f9 | sort -nr);
max=$(echo "$data" | head -n1);
min=$(echo "$data" | tail -n1);
avg=$(echo "$data" | ~/datamash-1.3/datamash mean 1);
echo "min $min max $max avg $avg";

	Running it using 'time ./numbers.sh', I got the following:

min 0 max 15835 avg 9.3346792163631

real    0m30.278s
user    0m23.311s
sys     0m1.854s

	Seeing as the min, max, and avg are the same as the python scripts, I can tell that it is working. Unfortunately, while I was expecting the bash script to be faster than the python script, it seems to be around 4 seconds slower. I am uncertain as to why; I both files rely on sorting the file, and the only outlier seems to be how the mean was calculated. In my case, I used datamash, and it is possible that it may be slower than the python library's mean calculation.

	(Note: my PuTTy froze while doing the worksheet, so I had to abruptly quit the session. This made me lose most of my recorded commands in history, so cmds.log won't have the full list of commands I used in my session.)
